['scripts/multi_args.py', '--help']

 | > def parse_args 
 |    
 |  Description :
 |    
 |    example parse_args template function with multiple arguments of different types  
 |    
 |  Arguments :
 |    
 |   -inp_int: int = 6
 |   -inp_float: float = 6.0
 |   -inp_str: str = 'Six'
 |   -inp_list: list = [6, 6.0, 'Six']
 |   -inp_tuple: tuple = (6, 6.0, 'Six')
 |   -inp_set: set = {'Six'}
 |   -inp_dict: dict = {'int': 6, 'float': 6.0, 'str': 'Six'}
 |    
 |  Usage :
 |    
 |    Seven arguments of different data type can be passed  
 |    any value of the respective data type can be passed for specific argument. for defaults refer above 
 |    the function returns a json string containing all the arguments and its values. 
 |     
 |    cmd : 
 |    1. python basic_usage.py 10 10.0 Seven [10,10.0,'Seven'] (10,10.0,'Seven') {10,10.0,'Seven'} {'int':10,'float':10.0,'str':"Seven"} 
 |    2. python basic_usage.py -inp_int=10 -inp_float=10.0 -inp_str=Seven -inp_list=[10,10.0,'Seven'] -inp_tuple=(10,10.0,'Seven') -inp_set={10,10.0,'Seven'} -inp_dict={'int':10,'float':10.0,'str':"Seven"}  
 |    
 | -> dict (Returnable)

