['moderate_scripts/basic_usage.py', '--help']

 | > def multi_args 
 |    
 |  Description :
 |    
 |    example multi_args template function with multiple arguments of different types  
 |    
 |  Arguments :
 |    
 |   -inp_int: int = 6
 |   -inp_float: float = 6.0
 |   -inp_str: str = 'Six'
 |   -inp_list: list = [6, 6.0, 'Six']
 |   -inp_dict: dict = {'int': 6, 'float': 6.0, 'str': 'Six'}
 |   -inp_bool: bool = False
 |    
 |  Usage :
 |    
 |    Six arguments of different data type can be passed  
 |    any value of the respective data type can be passed for specific argument. for defaults refer above 
 |    the function returns a dict containing all the arguments and its values. 
 |     
 |    cmds : 
 |    1. python moderate_scripts/basic_usage.py ~multi_args 10 10.0 Seven [10,10.0,'Seven'] {'int':10,'float':10.0,'str':'Seven'} True 
 |    2. python moderate_scripts/basic_usage.py ~multi_args -inp_int=10 -inp_float=10.0 -inp_str=Seven -inp_list=[10,10.0,'Seven'] -inp_dict={'int':10,'float':10.0,'str':'Seven'} -inp_bool=True  
 |    
 | -> dict (Returnable)

 | > def single_bool 
 |    
 |  Description :
 |    
 |    example single_bool template function with single argument of type <bool>  
 |    
 |  Arguments :
 |    
 |   -inp_bool: bool = False
 |    
 |  Usage :
 |    
 |    inp_bool is variable of type <bool>  
 |    any bool value can be passed for the argument, while the default is False 
 |    the function returns the same arg value as type <bool> 
 |     
 |    cmds : 
 |    1. python moderate_scripts/basic_usage.py ~single_bool True 
 |    2. python moderate_scripts/basic_usage.py ~single_bool -inp_bool=True  
 |    
 | -> bool (Returnable)

 | > def single_dict 
 |    
 |  Description :
 |    
 |    example single_dict template function with single argument of type <dict>  
 |    
 |  Arguments :
 |    
 |   -inp_dict: dict = {None: None}
 |    
 |  Usage :
 |    
 |    inp_dict is variable of type <dict>  
 |    any dict value can be passed for the argument, while the default is {None: None} 
 |    the function returns the same arg value as type <dict> 
 |     
 |    cmds : 
 |    1. python moderate_scripts/basic_usage.py ~single_dict {'Empty':'Empty'} 
 |    2. python moderate_scripts/basic_usage.py ~single_dict -inp_dict={'Empty':'Empty'}  
 |    
 | -> dict (Returnable)

 | > def single_float 
 |    
 |  Description :
 |    
 |    example single_float template function with single argument of type <float>  
 |    
 |  Arguments :
 |    
 |   -inp_float: float = 0.0
 |    
 |  Usage :
 |    
 |    inp_float is variable of type <float>  
 |    any floating point value can be passed for the argument, while the default is 0.0 
 |    the function returns the same arg value as type <float> 
 |     
 |    cmds : 
 |    1. python moderate_scripts/basic_usage.py ~single_float 10.0 
 |    2. python moderate_scripts/basic_usage.py ~single_float -inp_float=10.0  
 |    
 | -> float (Returnable)

 | > def single_int 
 |    
 |  Description :
 |    
 |    example single_int template function with single argument of type <int>  
 |    
 |  Arguments :
 |    
 |   -inp_int: int = 0
 |    
 |  Usage :
 |    
 |    inp_int is variable of type <int>  
 |    any integer value can be passed for the argument, while the default is 0 
 |    the function returns the same arg value as type <int> 
 |     
 |    cmds : 
 |    1. python moderate_scripts/basic_usage.py ~single_int 10 
 |    2. python moderate_scripts/basic_usage.py ~single_int -inp_int=10  
 |    
 | -> int (Returnable)

 | > def single_list 
 |    
 |  Description :
 |    
 |    example single_list template function with single argument of type <list>  
 |    
 |  Arguments :
 |    
 |   -inp_list: list = [None]
 |    
 |  Usage :
 |    
 |    inp_list is variable of type <list>  
 |    any list value can be passed for the argument, while the default is [None] 
 |    the function returns the same arg value as type <list> 
 |     
 |    cmds : 
 |    1. python moderate_scripts/basic_usage.py ~single_list ['Empty'] 
 |    2. python moderate_scripts/basic_usage.py ~single_list -inp_list=['Empty']  
 |    
 | -> list (Returnable)

 | > def single_str 
 |    
 |  Description :
 |    
 |    example single_str template function with single argument of type <str>  
 |    
 |  Arguments :
 |    
 |   -inp_str: str = 'None'
 |    
 |  Usage :
 |    
 |    inp_str is variable of type <str>  
 |    any string value can be passed for the argument, while the default is "None" 
 |    the function returns the same arg value as type <str> 
 |     
 |    cmds : 
 |    1. python moderate_scripts/basic_usage.py ~single_str "Empty" 
 |    2. python moderate_scripts/basic_usage.py ~single_str -inp_str="Empty"  
 |    
 | -> str (Returnable)

 | > def warn_no_support_typ_arg 
 |    
 |  Description :
 |    
 |    example parse_args template function for checking warnings  
 |    
 |  Arguments :
 |    
 |   -inp_df: pandas.core.frame.DataFrame
 |    
 |  Usage :
 |    
 |    example defined for checking if exception is getting raised, will not return any output as the definition is not valid  
 |    
 | -> None (Returnable)

 | > def warn_on_arg_order 
 |    
 |  Description :
 |    
 |    example parse_args template function for checking warnings  
 |    
 |  Arguments :
 |    
 |   -inp_bool1: bool
 |   -inp_bool2: bool
 |    
 |  Usage :
 |    
 |    example defined for checking if exception is getting raised, in scenarios where arguments order is changed.  
 |    
 | -> tuple (Returnable)

 | > def warn_ret_type 
 |    
 |  Description :
 |    
 |    example warn_ret_type template function for testing if warning is getting printed.  
 |    return type warning will be printed if there is a mismatch between expected dtype and returned dtype. 
 |    warning will only be printed and will not halt the execution flow.  
 |    
 |  Arguments :
 |    
 |   -inp_bool: int = False
 |    
 |  Usage :
 |    
 |    inp_bool is variable of type <bool>  
 |    any bool value can be passed for the argument, while the default is False 
 |    the function returns the same arg value as type <bool> 
 |     
 |    cmds : 
 |    1. python moderate_scripts/basic_usage.py ~warn_ret_type True 
 |    2. python moderate_scripts/basic_usage.py ~warn_ret_type -inp_bool=True  
 |    
 | -> str (Returnable)

 | > def warn_wo_ret_typ_def 
 |    
 |  Description :
 |    
 |    example warn_wo_ret_typ_def template function for checking warnings  
 |    
 |  Arguments :
 |    
 |   -inp_bool
 |    
 |  Usage :
 |    
 |    inp_bool is specified with no dtype limitations as per definition  
 |    any bool value can be passed for the argument 
 |    the function returns the same arg value 
 |     
 |    cmds : 
 |    1. python moderate_scripts/basic_usage.py ~warn_wo_ret_typ_def True 
 |    2. python moderate_scripts/basic_usage.py ~warn_wo_ret_typ_def -inp_bool=True  
 |    
 | -> Any (Returnable)

None <class 'NoneType'>
